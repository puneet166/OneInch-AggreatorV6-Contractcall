Step 1 - Give approval of token which you wanna to swap , just give the approval to - 0x111111125421ca6dc452d289314280a0f8842a65 from your ADDRESS .
	* For this use ``` await approveToken(100); ``` Function which is present in main.js file.

Step 2 - Once you give the approval.

Step 3 - Call ```initiateSwap();``` Function which is present in main.js file. 

Step 4 - You will get the data from oneinch API call in console terminal like this - 
	Transaction details for swap: {
  from: '0x27fed99ac9657afa60cd2cc20ba69def391cf386',
  to: '0x111111125421ca6dc452d289314280a0f8842a65',
  data: '0x07ed2379000000000000000000000000e37e799d5077682fa0a244d46e5649f71457bd09000000000000000000000000c2132d05d31c914a87c6611c10748aeb04b58e8f0000000000000000000000000d500b1d8e8ef31e21c99d1db9a6444d3adf1270000000000000000000000000e37e799d5077682fa0a244d46e5649f71457bd0900000000000000000000000027fed99ac9657afa60cd2cc20ba69def391cf386000000000000000000000000000000000000000000000000000000000000006400000000000000000000000000000000000000000000000000009f89f9b0e5010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000012000000000000000000000000000000000000000000000000000000000000001150000000000000000000000000000000000000000000000f700006800004e802026678dcdc2132d05d31c914a87c6611c10748aeb04b58e8f27fed99ac9657afa60cd2cc20ba69def391cf38600000000000000000000000000000000000000000000000000000000000000010020d6bdbf78c2132d05d31c914a87c6611c10748aeb04b58e8f0c20c2132d05d31c914a87c6611c10748aeb04b58e8f55ff76bffc3cdd9d5fdbbc2ece4528ecce45047e6ae4071138002dc6c055ff76bffc3cdd9d5fdbbc2ece4528ecce45047e111111125421ca6dc452d289314280a0f8842a6500000000000000000000000000000000000000000000000000009f89f9b0e501c2132d05d31c914a87c6611c10748aeb04b58e8f000000000000000000000037de29fe',
  value: '0',
  gas: 208985,
  gasPrice: '131784434451'
}

Step 5 - Copy the data key which is ``` 0x07ed2379000000000000000000000000e37e799d5077682fa0a244d46e5649f71457bd09000000000000000000000000c2132d05d31c914a87c6611c10748aeb04b58e8f0000000000000000000000000d500b1d8e8ef31e21c99d1db9a6444d3adf1270000000000000000000000000e37e799d5077682fa0a244d46e5649f71457bd0900000000000000000000000027fed99ac9657afa60cd2cc20ba69def391cf386000000000000000000000000000000000000000000000000000000000000006400000000000000000000000000000000000000000000000000009f89f9b0e5010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000012000000000000000000000000000000000000000000000000000000000000001150000000000000000000000000000000000000000000000f700006800004e802026678dcdc2132d05d31c914a87c6611c10748aeb04b58e8f27fed99ac9657afa60cd2cc20ba69def391cf38600000000000000000000000000000000000000000000000000000000000000010020d6bdbf78c2132d05d31c914a87c6611c10748aeb04b58e8f0c20c2132d05d31c914a87c6611c10748aeb04b58e8f55ff76bffc3cdd9d5fdbbc2ece4528ecce45047e6ae4071138002dc6c055ff76bffc3cdd9d5fdbbc2ece4528ecce45047e111111125421ca6dc452d289314280a0f8842a6500000000000000000000000000000000000000000000000000009f89f9b0e501c2132d05d31c914a87c6611c10748aeb04b58e8f000000000000000000000037de29fe ````

Step 6 - Go to the decode.js file and open the file and search where const data ="<data>" in decode.js file ;

Step 7 - Replce the copied data from step 4 and 5 with step no 6 in decode.js file - const data ="<pasthe here>;

Step 8 - run the decode.js file using node decode.js .

Step 9 - You will get the response like this -

Result(3) [
  '0xE37e799D5077682FA0a244D46E5649F71457BD09',
  Result(7) [
    '0xc2132D05D31c914a87C6611C10748AEb04B58e8F',
    '0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270',
    '0xE37e799D5077682FA0a244D46E5649F71457BD09',
    '0x27FEd99AC9657afa60cd2cc20bA69DEf391cf386',
    100n,
    175414948455681n,
    0n
  ],
  '0x0000000000000000000000000000000000000000000000f700006800004e802026678dcdc2132d05d31c914a87c6611c10748aeb04b58e8f27fed99ac9657afa60cd2cc20ba69def391cf38600000000000000000000000000000000000000000000000000000000000000010020d6bdbf78c2132d05d31c914a87c6611c10748aeb04b58e8f0c20c2132d05d31c914a87c6611c10748aeb04b58e8f55ff76bffc3cdd9d5fdbbc2ece4528ecce45047e6ae4071138002dc6c055ff76bffc3cdd9d5fdbbc2ece4528ecce45047e111111125421ca6dc452d289314280a0f8842a6500000000000000000000000000000000000000000000000000009f89f9b0e501c2132d05d31c914a87c6611c10748aeb04b58e8f'
]

Step 10 - Give approval of token which you wanna  to swap to deployed smart contract swapproxy.sol .

Step 11 - Call the smart contract fucntion with step 9's params like this  -


		executor - 0xE37e799D5077682FA0a244D46E5649F71457BD09
		_swapData - ["0xc2132D05D31c914a87C6611C10748AEb04B58e8F","0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270","0xE37e799D5077682FA0a244D46E5649F71457BD09","0x27FEd99AC9657afa60cd2cc20bA69DEf391cf386","100","175414948455681","0"]
		_data - 0x0000000000000000000000000000000000000000000000f700006800004e802026678dcdc2132d05d31c914a87c6611c10748aeb04b58e8f27fed99ac9657afa60cd2cc20ba69def391cf38600000000000000000000000000000000000000000000000000000000000000010020d6bdbf78c2132d05d31c914a87c6611c10748aeb04b58e8f0c20c2132d05d31c914a87c6611c10748aeb04b58e8f55ff76bffc3cdd9d5fdbbc2ece4528ecce45047e6ae4071138002dc6c055ff76bffc3cdd9d5fdbbc2ece4528ecce45047e111111125421ca6dc452d289314280a0f8842a6500000000000000000000000000000000000000000000000000009f89f9b0e501c2132d05d31c914a87c6611c10748aeb04b58e8f

Step 12 - sucessfully swap happened.

Smart contract address - 0x2ff7741e43C5DCAE9C5E300237c224baAef67A10 on polygon POS network mainnet.